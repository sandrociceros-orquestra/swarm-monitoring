version: "3.8"

volumes:
  prometheus:
  grafana:
  alertmanager:

configs:
  node_rules:
    file: ./prometheus/rules/swarm_node.rules.yml
  task_rules:
    file: ./prometheus/rules/swarm_task.rules.yml

services:
  prometheus:
    image: prom/prometheus:latest
    # container_name: monitoring_prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      # - '--storage.local.target-heap-size=1073741824'
      # - '--storage.local.retention=24h'
    ports:
      - 9090:9090
    configs:
      - source: node_rules
        target: /etc/prometheus/rules/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/rules/swarm_task.rules.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

  node-exporter:
    image: prom/node-exporter:latest
    environment:
      - NODE_ID={{.Node.ID}}
    # container_name: monitoring_node_exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--collector.textfile.directory=/etc/node-exporter/'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  rpi-exporter:
    image: carlosedp/arm_exporter
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /etc/hostname:/etc/nodename:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/TZ:ro
    command:
      - '--collector.textfile.directory=/etc/rpi_exporter/'
    ports:
      - 9243:9243
    deploy:
      mode: global

  cadvisor:
    image: zcube/cadvisor:latest
    # container_name: monitoring-cadvisor
    hostname: rpi-cadvisor
    # privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  alertmanager:
    image: prom/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - alertmanager:/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # unsee:
  #   image: cloudflare/unsee
  #   environment:
  #     - "ALERTMANAGER_URIS=default:http://alertmanager:9093"
  #   deploy:
  #     mode: replicated
  #     replicas: 1

  grafana:
    image: grafana/grafana:latest
    # container_name: monitoring_grafana
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      # - GF_SERVER_DOMAIN=myrul.com
      - GF_SMTP_ENABLED=false
      - GF_SMTP_HOST=smtp.gmail.com:587
      - GF_SMTP_USER=sandro.cicero@techsavvy.com.br
      - GF_SMTP_PASSWORD=zZH_zngqp1%
      - GF_SMTP_FROM_ADDRESS=sandro.cicero@techsavvy.com.br
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
